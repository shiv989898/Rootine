rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isUnder10MB() {
      return request.resource.size < 10 * 1024 * 1024;
    }
    
    function isUnder5MB() {
      return request.resource.size < 5 * 1024 * 1024;
    }
    
    // Profile Photos
    // Path: /users/{userId}/profile/{filename}
    match /users/{userId}/profile/{filename} {
      // Users can read any profile photo
      allow read: if isAuthenticated();
      
      // Users can upload/update their own profile photo
      allow write: if isAuthenticated()
        && isOwner(userId)
        && isImage()
        && isUnder5MB();
      
      // Users can delete their own profile photo
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Post Images
    // Path: /posts/{userId}/{postId}/{filename}
    match /posts/{userId}/{postId}/{filename} {
      // Anyone authenticated can read post images
      allow read: if isAuthenticated();
      
      // Users can upload images to their own posts
      allow write: if isAuthenticated()
        && isOwner(userId)
        && isImage()
        && isUnder10MB();
      
      // Users can delete their own post images
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Progress Photos (Habit tracking)
    // Path: /progress/{userId}/{habitId}/{filename}
    match /progress/{userId}/{habitId}/{filename} {
      // Users can read their own progress photos
      allow read: if isAuthenticated() && isOwner(userId);
      
      // Users can upload their own progress photos
      allow write: if isAuthenticated()
        && isOwner(userId)
        && isImage()
        && isUnder10MB();
      
      // Users can delete their own progress photos
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Recipe Images
    // Path: /recipes/{recipeId}/{filename}
    match /recipes/{recipeId}/{filename} {
      // Anyone authenticated can read recipe images
      allow read: if isAuthenticated();
      
      // Only authenticated users can upload recipe images
      allow write: if isAuthenticated()
        && isImage()
        && isUnder5MB();
      
      // Users who uploaded can delete
      allow delete: if isAuthenticated();
    }
    
    // Challenge Images
    // Path: /challenges/{challengeId}/{filename}
    match /challenges/{challengeId}/{filename} {
      // Anyone authenticated can read challenge images
      allow read: if isAuthenticated();
      
      // Authenticated users can upload challenge images
      allow write: if isAuthenticated()
        && isImage()
        && isUnder5MB();
      
      // Challenge creators can delete images
      allow delete: if isAuthenticated();
    }
    
    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
